/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {void} Do not return anything, modify root in-place instead.
 */
var recoverTree = function(root) {
    
    let n1, n2, temp;
    
    let prev = new TreeNode(-Number.MAX_VALUE);
    
    if(!root){
        return false;
    }
    
    bts(root);
    
    temp = n1.val;
    n1.val = n2.val;
    n2.val = temp;
    
    
    
    function bts(root){
    
    if(!root)
        {
            return false;
        }
    
    bts(root.left);
        
 
    if(root.val < prev.val)
        {
            
       
            n2 = root;
            
            if(!n1)
            {
                n1= prev;
            }
        }
        
        
        prev = root;
        
        bts(root.right);
}
    
    
    
};

