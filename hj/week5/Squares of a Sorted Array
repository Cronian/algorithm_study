class Solution {
    public int[] sortedSquares(int[] A) {
        
        quickSort(A, 0, A.length-1);
        
        for(int i=0;i<A.length;i++) {
            A[i] = (int)Math.pow(A[i],2);
        }
        
        return A;        
    }
    
    
    public void quickSort(int[] A, int left, int right) {
        if(right > left) {
            int i = left, j = right, dummy = 0;
            int pivot = (int)Math.pow(A[left], 2);
        
            while(i < j) {
                
                while((int)Math.pow(A[j], 2) > pivot) {
                    j--;
                }

                while(i < j && (int)Math.pow(A[i], 2) <= pivot) {
                    i++;
                }
                
                if(i > j) {
                    break;
                }
                dummy = A[i];
                A[i] = A[j];
                A[j] = dummy;    
                
            }
            
            dummy = A[i];
            A[i] = A[left];
            A[left] = dummy;

            quickSort(A, left, i-1);
            quickSort(A, i+1, right);        
        }        
    }
    
}

public class MainClass {
    public static int[] stringToIntegerArray(String input) {
        input = input.trim();
        input = input.substring(1, input.length() - 1);
        if (input.length() == 0) {
          return new int[0];
        }
    
        String[] parts = input.split(",");
        int[] output = new int[parts.length];
        for(int index = 0; index < parts.length; index++) {
            String part = parts[index].trim();
            output[index] = Integer.parseInt(part);
        }
        return output;
    }
    
    public static String integerArrayToString(int[] nums, int length) {
        if (length == 0) {
            return "[]";
        }
    
        String result = "";
        for(int index = 0; index < length; index++) {
            int number = nums[index];
            result += Integer.toString(number) + ", ";
        }
        return "[" + result.substring(0, result.length() - 2) + "]";
    }
    
    public static String integerArrayToString(int[] nums) {
        return integerArrayToString(nums, nums.length);
    }
    
    public static void main(String[] args) throws IOException {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        String line;
        while ((line = in.readLine()) != null) {
            int[] A = stringToIntegerArray(line);
            
            int[] ret = new Solution().sortedSquares(A);
            
            String out = integerArrayToString(ret);
            
            System.out.print(out);
        }
    }
}
